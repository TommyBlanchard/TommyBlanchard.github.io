<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tommy Blanchard - Tommy Blanchard</title><link href="http://tommyblanchard.com/" rel="alternate"></link><link href="http://tommyblanchard.com/feeds/tommy-blanchard.atom.xml" rel="self"></link><id>http://tommyblanchard.com/</id><updated>2017-01-18T10:06:33-05:00</updated><entry><title>Hello, world!</title><link href="http://tommyblanchard.com/hello-world" rel="alternate"></link><published>2017-01-18T10:06:33-05:00</published><updated>2017-01-18T10:06:33-05:00</updated><author><name>Tommy Blanchard</name></author><id>tag:tommyblanchard.com,2017-01-18:/hello-world</id><summary type="html">&lt;p&gt;As of this writing, I'm in the middle of the transition from academia to industry data science. This website is meant partially to replace my academic website. It's also a place for me to showcase some of my personal data science projects. I'll probably be starting with some of the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As of this writing, I'm in the middle of the transition from academia to industry data science. This website is meant partially to replace my academic website. It's also a place for me to showcase some of my personal data science projects. I'll probably be starting with some of the small projects I've done while building up some of my data science skills, and hopefully eventually be releasing some more polished projects.&lt;/p&gt;
&lt;p&gt;I also intend to write blog entries (like this one). While my projects will tend to be something that involved coding, learning a new skill, and/or exploring a data set, blog entries will just be free-form writing. I mostly intend to write about data science, statistics, science, and related things. Because I've so recently come from academia, I expect many will focus on the difference between academia and industry, and the transition. And sometimes maybe I'll write about things completely unrelated.&lt;/p&gt;
&lt;p&gt;This site is still somewhat under construction, and the organization of it might change quite a bit as it grows/matures.&lt;/p&gt;
&lt;p&gt;If you want to read about the technical aspect of the blog (what tools I'm using and why), see &lt;a href="http://tommyblanchard.com/this-website"&gt;this post&lt;/a&gt;.&lt;/p&gt;</content></entry><entry><title>This Website</title><link href="http://tommyblanchard.com/this-website" rel="alternate"></link><published>2017-01-18T10:04:08-05:00</published><updated>2017-01-18T10:04:08-05:00</updated><author><name>Tommy Blanchard</name></author><id>tag:tommyblanchard.com,2017-01-18:/this-website</id><summary type="html">&lt;p&gt;I felt it was fitting to write the first "Project" article on this website, since it's the most recent little project I've been working on.&lt;/p&gt;
&lt;h3&gt;Choosing a framework&lt;/h3&gt;
&lt;p&gt;I was looking for a few things in a website: Something easily customizable, easily publishable, capable of blog feeds, and that could …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I felt it was fitting to write the first "Project" article on this website, since it's the most recent little project I've been working on.&lt;/p&gt;
&lt;h3&gt;Choosing a framework&lt;/h3&gt;
&lt;p&gt;I was looking for a few things in a website: Something easily customizable, easily publishable, capable of blog feeds, and that could easily incorporate Jupyter Notebooks directly into it.&lt;/p&gt;
&lt;p&gt;Looking around, it seemed the best fit for the job were static site generators. Static site generators are just programs that take a bunch of content, your settings and templates/stylesheets, and create static HTML files. Static site generators are simple to use, easy to customize, don't require some awkward web UI, and publishing is extremely fast and doesn't even require me to visit a website. They also have the advantage of being fast compared to any dynamic websites since the server just has to serve a plain HTML page. There are a few other advantages to them - &lt;a href="https://davidwalsh.name/introduction-static-site-generators"&gt;I found this a helpful read&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With a static site generator, I can easily write an article in Markdown. Then with a couple simple terminal commands I can have it publish to the site.&lt;/p&gt;
&lt;h3&gt;Choosing a static site generator&lt;/h3&gt;
&lt;p&gt;It turns out &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; is the most popular static site generator. That means it has the advantage of the biggest community of support. However, there were two major disadvantages for me. &lt;/p&gt;
&lt;p&gt;First, Jekyll is written in Ruby. I'm not very familiar with Ruby, and don't currently have any reason to learn it (besides for Jekyll). This means if I wanted to dig into the code to customize things, it would be a big pain. &lt;/p&gt;
&lt;p&gt;Second, Jekyll doesn't have easy support for Jupyter Notebooks. I want to be able to do some data exploration in a Jupyter Notebook, and then just upload the notebook as an article easily. While it is &lt;a href="http://briancaffey.github.io/2016/03/14/ipynb-with-jekyll.html"&gt;possible to post Jupyter Notebooks with Jekyll&lt;/a&gt;, it isn't supported natively and takes extra steps.&lt;/p&gt;
&lt;p&gt;After doing some research, I ended up deciding on &lt;a href="http://docs.getpelican.com/en/stable/"&gt;Pelican&lt;/a&gt;. Pelican is written in Python, my preferred language. With &lt;a href="https://github.com/danielfrg/pelican-ipynb"&gt;a simple plugin&lt;/a&gt;, publishing Jupyter Notebooks becomes almost as easy as publishing Markdown - a separate file needs to be created for the metadata. Making changes to notebooks and then republishing becomes trivial, and life is easy.&lt;/p&gt;
&lt;h3&gt;Website host&lt;/h3&gt;
&lt;p&gt;After I had figured out how I was going to create my website, I had to choose a place to put it. This was a no-brainer. Because I'm using a static website, I don't need any fancy server support. &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; is free and allows me to change my site just by pushing to a Github repo. It also allows custom URLs (though not with HTTPS currently). So the whole process for publishing an article is: write Markdown or Jupyter Notebook, run pelican to generate the site pages, commit and push to Github. Super easy and quick!&lt;/p&gt;
&lt;p&gt;If you're looking for a tutorial on how to set up your own Github hosted Pelican website, &lt;a href="https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/"&gt;this tutorial&lt;/a&gt; is super helpful.&lt;/p&gt;</content><category term="Pelican"></category><category term="Python"></category><category term="Static site generators"></category></entry></feed>